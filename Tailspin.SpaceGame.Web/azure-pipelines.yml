pool:
  vmImage: 'Ubuntu-16.04'
  demands:
    -npm


variables:
    buildConfigurations: 'Release'
    wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
    dotnetSdkVrsion: '2.1.505'    
steps:
- task: DotNetCoreInstaller@0
  displayName: 'Use .net Core SDK $(dotnetSdkVersion)'
  inputs:
    version: $(dotnetSdkVersion)

- task Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
 displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

-template: templates/build.yml
 parameters:
    buildConfigurations: 'Release'   
#- task: DotNetCoreCLI@2
 # displayName: 'Build the project - Release'
  #inputs:
   # command: 'build'
    #arguments: '--no-restore --configuration Release'
    #projects: '**/*.csproj'
#- task: DotNetCoreCLI@2
 # displayName: 'Publish Report - Release'
  #inputs:
   # command: 'publish'
    #arguments: '**/*.csproj'
    #publishWebProjects: false
    #arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
    #zipAfterPublish: true
    
    - task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()